
includeConfig '../nextflow.base.dockers.config'


params {
    bams_dir =''
    Eindex_result_dir="${launchDir}/AEI/"
    // choose limitations of RNAEditingIndex runing in parallel
    max_fork_RNAEditingIndex=1
    //run in lite version - use local resources files instead of inner docker's
    // currently not supporting run on full docker (docker_lite=false)
    docker_lite=true
    stranded=false
    singleEnd=false
    keep_cmpileup=false
    genome_file=''
    bams_suffix='.Aligned.sortedByCoord.out.bam'
    per_region_output=false
    per_sample_output=false
    regions=''
    mergeBED_forEI=false
    snp_file=''
    refseq_file=''
    expression_file=''
    // index will run only on path that contain that string -
    must_contain=''
    which_RNAEditingIndex='RNAEditingIndex'
    editingIndex_additional_params = ''
    alu_index=true
    // if U want to run on many regions files - set to true and set regions to be a pattern like '/path/to/files/*.bed'
    // if U run regions='/path/to/files/*.bed' ; nextflow -c .. run .. --regions "$regions" >>> remember to use qutas 
    run_on_multiRegionsFiles = false
    }

// editing index docker 
params.use_editing_index_hub_image = true
params.editing_index_docker_image = params.use_editing_index_hub_image ? 'levanonlab/rna-editing-index-lite:1.0' : 'local/rna-editing-index:lite'
// TODO for full docker
// params.editing_index_docker_image = params.docker_lite ? 'local/rna-editing-index:lite' : 'local/rna-editing-index:fixed'
params.EI_Docker_file = params.docker_lite ? "${params.levanon_lab_pipelines_dir}/Resources/Editing_index/Docker/Lite/Dockerfile" : ''

profiles{
    hg38 {
        params.profile_selected = "hg38"
        // curently not supporting using built-in files for genome annotation
        params.genome = params.docker_lite ? 'UserProvided' : 'hg38'
        params.genome_file = params.docker_lite ? '/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/Genomes/HomoSapiens/ucscHg38Genome.fa' : ''
        params.refseq_file = params.docker_lite ? "/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/RefSeqAnnotations/HomoSapiens/ucscHg38RefSeqCurated.bed.gz" : ''
        params.expression_file = params.docker_lite ? "/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/GenesExpression/HomoSapiens/ucscHg38GTExGeneExpression.bed.gz" : ''
        params.snp_file = params.docker_lite ? "/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/SNPs/HomoSapiens/ucscHg38CommonGenomicSNPs150.bed.gz" : ''
        params.regions =  params.alu_index ? "${params.levanon_lab_pipelines_dir}/Resources/Editing_index/AEI/ucscHg38Alu.bed.gz" : ''
    }
    mm10 {
        params.profile_selected = "mm10"
        params.genome = params.docker_lite ? 'UserProvided' : 'mm10'
        params.refseq_file = params.docker_lite ? "/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/RefSeqAnnotations/MusMusculus/ucscMM10RefSeqCurated.bed.gz" : ''
        params.expression_file = params.docker_lite ? "/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/GenesExpression/MusMusculus/ucscMM10GTExGeneExpression.bed.gz" : ''
        params.snp_file = params.docker_lite ? "/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/SNPs/MusMusculus/ucscMM10CommonGenomicSNPs142.bed.gz" : ''
        params.genome_file= params.docker_lite ? '/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/Genomes/MusMusculus/ucscMm10Genome.fa' : ''
        params.regions =  params.alu_index ? '/private/common/Software/AEI/RNAEditingIndex1.1/RNAEditingIndexer/Resources/Regions/MusMusculus/ucscMM10SINE_B1_B2.bed.gz' : ''
    }
    standard {
        params.profile_selected = ""
    }

} 

// // get dirname for mounting
// Eindex_result_dirname = (new File(params.Eindex_result_dir)).parentFile

// GfileDN = params.genome_file ? (new File(params.genome_file)).parentFile : ''
// genome_file_mount = params.genome_file ? "--volume ${GfileDN}:${GfileDN}" : ' '

// ReffileDN = params.refseq_file ? (new File(params.refseq_file)).parentFile  : ' '
// refseq_file_mount = params.refseq_file ? "--volume ${ReffileDN}:${ReffileDN}" : ' '

// EXfileDN = params.expression_file ? (new File(params.expression_file)).parentFile : ' '
// expression_file_mount = params.expression_file ? "--volume ${EXfileDN}:${EXfileDN}" : ' '

// SNfileDN = params.snp_file ? (new File(params.snp_file)).parentFile : ' '
// snp_file_mount = params.snp_file ? "--volume ${SNfileDN}:${SNfileDN}" : ' '

// RegfileDN = params.regions ? (new File(params.regions)).parentFile : ' '
// regions_mount = params.regions ? "--volume ${RegfileDN}:${RegfileDN}" : ' '

// JSDfile_dirname = params.genome_regions_index ?  (new File(params.genome_regions_index)).parentFile : ' '
// genome_regions_index_mount = params.genome_regions_index ? "--volume ${JSDfile_dirname}:${JSDfile_dirname}" : ' '




process {
    withName:RUN_EINDEX{
    container = params.editing_index_docker_image
    // containerOptions = "--volume ${Eindex_result_dirname}:${Eindex_result_dirname}  --volume ${params.bams_dir}:${params.bams_dir} $genome_file_mount $refseq_file_mount $expression_file_mount $snp_file_mount $regions_mount  $genome_regions_index_mount"
    }    
    withName:RUN_EINDEX_multi_regions{
    container = params.editing_index_docker_image
    // containerOptions = "--volume ${Eindex_result_dirname}:${Eindex_result_dirname}  --volume ${params.bams_dir}:${params.bams_dir} $genome_file_mount $refseq_file_mount $expression_file_mount $snp_file_mount $regions_mount  $genome_regions_index_mount"
    }
}



