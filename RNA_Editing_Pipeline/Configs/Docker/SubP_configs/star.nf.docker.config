params{
    singleEnd = false
    in_fastq_dir=''
    fastq_suffix='fastq'
    // in case of single-end with no pattern of read1/2 in the file name
    no_mates = params.singleEnd ? true : false 
    mates_patt = params.no_mates ? '' : '_{1,2}'
    fastq_pat="${params.in_fastq_dir}/*${params.mates_patt}.${params.fastq_suffix}"
    // where the out fastqs will be
    star_outdir="${launchDir}/STAR/"
    //if to clean star genome at the end of all proccess
    // because its run inside docker It will do it anyway and we dont need a step for that
    clean_genome=false
    //samples
    STAR_MAX_PARALLEL=6
    //threads
    runThreadN='5'
    // if to compress unmapped
    compress_unmapped=true
    compress_command="gzip -9"
    genome_length=''

    // if to run roni's star stats script - corrently not supported in docker
    run_star_summarize_script = false
    which_samtools = 'samtools'
    which_star = 'STAR'
    which_python_27 = 
    which_star_summarize_script = "$params.which_python_27 ${params.levanon_lab_pipelines_dir}/Resources/STARstatsV2.py"

    //---------- star parameters:
    alignSJoverhangMin='8'
    alignIntronMax='1000000'
    alignMatesGapMax='600000'
    //  ratio of mismatches to *mapped* length  <
    outFilterMismatchNoverLmax="0.3"
    //  ratio of mismatches to *read* length <
    outFilterMismatchNoverReadLmax='1'
    // real: sam as outFilterMatchNmin, but normalized to the read length (sum of
    // matesâ€™ lengths for paired-end reads).
    outFilterMatchNminOverLread="0.66"
    // max number of multiple alignments allowed for a read
    // !!! note !! default of star is 20
    outFilterMultimapNmax="1"    
}



profiles {
    hg38 {
        params.profile_selected = "hg38"
        params.star_genome = "ReplaceSTARGenomePATH/HomoSapiens/hg38/sjdbOverhang${params.genome_length}"
    }
    mm10 {
        params.profile_selected = "mm10"
        params.star_genome = "ReplaceSTARGenomePATH/MusMusculus/mm10/sjdbOverhang${params.genome_length}"
    } 
    standard {
        params.profile_selected = ""
    }

}


//for mounting
// star_outdir_dirname =  (new File(params.star_outdir)).parentFile

process {

    withName:STAR_load_and_alignment_all{
        container = 'quay.io/biocontainers/star:2.7.3a--0'
        // containerOptions = "--volume ${star_outdir_dirname}:${star_outdir_dirname} --volume ${params.star_genome}:${params.star_genome} --volume ${params.in_fastq_dir}:${params.in_fastq_dir}"
    }
    withName:CH_FROM_STAR_load_and_alignment_all{
        container = 'frolvlad/alpine-bash:latest'
        // containerOptions = "--volume ${star_outdir_dirname}:${star_outdir_dirname}"
    }
    withName:SORT{
        container = 'staphb/samtools:1.18'
        // containerOptions = "--volume ${star_outdir_dirname}:${star_outdir_dirname}"
    }
    withName:INDEX{
        container = 'staphb/samtools:1.18'
        // containerOptions = "--volume ${star_outdir_dirname}:${star_outdir_dirname}"
    }
    withName:CompressUnmapped{
        container = 'frolvlad/alpine-bash:latest'
        // containerOptions = "--volume ${star_outdir_dirname}:${star_outdir_dirname}"
    }
    withName:RemoveTemp{
        container = 'frolvlad/alpine-bash:latest'
        // containerOptions = "--volume ${star_outdir_dirname}:${star_outdir_dirname}"
    }
}

includeConfig '../nextflow.base.dockers.config'
